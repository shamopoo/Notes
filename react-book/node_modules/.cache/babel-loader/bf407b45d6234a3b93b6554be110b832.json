{"ast":null,"code":"import _wrapNativeSuper from \"/Users/shamopoo/Desktop/github/Notes/react-book/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _classCallCheck from \"/Users/shamopoo/Desktop/github/Notes/react-book/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shamopoo/Desktop/github/Notes/react-book/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shamopoo/Desktop/github/Notes/react-book/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shamopoo/Desktop/github/Notes/react-book/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shamopoo/Desktop/github/Notes/react-book/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shamopoo/Desktop/github/Notes/react-book/src/one/computer.js\";\nimport React, { Component } from 'react'; // 完成两个组件，电脑 Computer 和显示器 Screen。\n// 电脑有个 status 状态表示电脑现在是开还是关的，status 为 on 为开，status 为 off 为关，默认状态为 off。电脑有个按钮，点击可以自由切换电脑的开关状态。\n// 显示器接受一个名为 showContent 的 props，显示器会把它内容显示出来。如果不传入 showContent，显示器显示 “无内容”。\n// 电脑包含显示器，当电脑状态为开的时候显示器显示“显示器亮了”，否则显示“显示器关了”。\n\nvar Computer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Computer, _Component);\n\n  function Computer() {\n    _classCallCheck(this, Computer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Computer).apply(this, arguments));\n  }\n\n  _createClass(Computer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleComputerClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"\\u5F00\\u5173\"));\n    }\n  }]);\n\n  return Computer;\n}(Component);\n\nvar Screen =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Screen, _Component2);\n\n  function Screen() {\n    _classCallCheck(this, Screen);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Screen).apply(this, arguments));\n  }\n\n  _createClass(Screen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"screen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Screen;\n}(Component);\n\nScreen.defaultProps = {\n  showContent: '无内容'\n};\n\nvar ComputerApp =\n/*#__PURE__*/\nfunction (_Comment) {\n  _inherits(ComputerApp, _Comment);\n\n  function ComputerApp() {\n    var _this;\n\n    _classCallCheck(this, ComputerApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComputerApp).call(this));\n    _this.state = {\n      status: false\n    };\n    return _this;\n  }\n\n  _createClass(ComputerApp, [{\n    key: \"handleComputerClick\",\n    value: function handleComputerClick() {\n      this.setState({\n        state: !this.state.status\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Computer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Screen, {\n        showContent: this.props.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ComputerApp;\n}(_wrapNativeSuper(Comment));\n\nexport default ComputerApp;","map":{"version":3,"sources":["/Users/shamopoo/Desktop/github/Notes/react-book/src/one/computer.js"],"names":["React","Component","Computer","handleComputerClick","bind","Screen","defaultProps","showContent","ComputerApp","state","status","setState","props","text","Comment"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AAEA;AAEA;AAEA;;IACMC,Q;;;;;;;;;;;;;6BACM;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF;AAKD;;;;EAPoBH,S;;IAUjBI,M;;;;;;;;;;;;;6BAIM;AACR,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EARkBJ,S;;AAAfI,M,CACGC,Y,GAAe;AACpBC,EAAAA,WAAW,EAAE;AADO,C;;IAUlBC,W;;;;;AACJ,yBAAe;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAFS;AAKd;;;;0CACsB;AACjB,WAAKC,QAAL,CAAc;AACVF,QAAAA,KAAK,EAAE,CAAC,KAAKA,KAAL,CAAWC;AADT,OAAd;AAGL;;;6BACS;AACR,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKE,KAAL,CAAWC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMD;;;;mBAnBuBC,O;;AAqB1B,eAAgBN,WAAhB","sourcesContent":["import React, { Component } from 'react';\n\n// 完成两个组件，电脑 Computer 和显示器 Screen。\n\n// 电脑有个 status 状态表示电脑现在是开还是关的，status 为 on 为开，status 为 off 为关，默认状态为 off。电脑有个按钮，点击可以自由切换电脑的开关状态。\n\n// 显示器接受一个名为 showContent 的 props，显示器会把它内容显示出来。如果不传入 showContent，显示器显示 “无内容”。\n\n// 电脑包含显示器，当电脑状态为开的时候显示器显示“显示器亮了”，否则显示“显示器关了”。\nclass Computer extends Component {\n  render () {\n    return (\n      <div>\n        <button onClick={this.handleComputerClick.bind(this)} >开关</button>\n      </div>\n    )\n  }\n}\n\nclass Screen extends Component {\n  static defaultProps = {\n    showContent: '无内容'\n}\n  render () {\n    return (\n      <div className='screen'></div>\n    )\n  }\n}\n\nclass ComputerApp extends Comment {\n  constructor () {\n        super()\n        this.state = {\n            status: false\n        }\n  }\n  handleComputerClick () {\n        this.setState({\n            state: !this.state.status\n        })\n  }\n  render () {\n    return (\n        <div>\n            <Computer />\n            <Screen showContent={this.props.text} />\n        </div>  \n    )\n  }\n}\nexport default  ComputerApp"]},"metadata":{},"sourceType":"module"}
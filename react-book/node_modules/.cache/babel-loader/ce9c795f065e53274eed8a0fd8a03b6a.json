{"ast":null,"code":"import _classCallCheck from \"/Users/shamopoo/Desktop/github/Notes/react-book/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shamopoo/Desktop/github/Notes/react-book/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shamopoo/Desktop/github/Notes/react-book/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shamopoo/Desktop/github/Notes/react-book/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shamopoo/Desktop/github/Notes/react-book/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shamopoo/Desktop/github/Notes/react-book/src/Two/Calculator.js\";\nimport React, { Component } from 'react'; //  做一个百分比换算器，需要你完成三个组件：\n//  <Input />：封装了原生的<input />，可以输入任意数字\n// <PercentageShower />：实时 显示 <Input /> 中的数字内容，但是需要把它转换成百分比，\n// 例如 <Input /> 输入的是 0.1，那么就要显示 10.00%，保留两位小数。\n// <PercentageApp />：组合上述两个组件。\n\nvar Input =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Input, _Component);\n\n  function Input() {\n    _classCallCheck(this, Input);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Input).apply(this, arguments));\n  }\n\n  _createClass(Input, [{\n    key: \"handleNumberInput\",\n    value: function handleNumberInput(event) {\n      if (this.props.onInput) {\n        !!event.target.value && this.props.onInput(event.target.value);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"comment-field-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        onChange: this.handleNumberInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Input;\n}(Component);\n\nvar PercentageShower =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(PercentageShower, _Component2);\n\n  function PercentageShower() {\n    var _this;\n\n    _classCallCheck(this, PercentageShower);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PercentageShower).call(this));\n    _this.state = {\n      percentage: ''\n    };\n    return _this;\n  }\n\n  _createClass(PercentageShower, [{\n    key: \"handleInput\",\n    value: function handleInput(num) {\n      console.log(num);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onInput: this.handleInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PercentageShower;\n}(Component);\n\nvar PercentageApp =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(PercentageApp, _Component3);\n\n  function PercentageApp() {\n    _classCallCheck(this, PercentageApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PercentageApp).apply(this, arguments));\n  }\n\n  _createClass(PercentageApp, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(PercentageShower, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PercentageApp;\n}(Component);\n\nexport default PercentageApp;","map":{"version":3,"sources":["/Users/shamopoo/Desktop/github/Notes/react-book/src/Two/Calculator.js"],"names":["React","Component","Input","event","props","onInput","target","value","handleNumberInput","bind","PercentageShower","state","percentage","num","console","log","handleInput","PercentageApp"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAGA;AAEA;AAEA;AACA;AAEA;;IAEMC,K;;;;;;;;;;;;;sCACeC,K,EAAO;AACvB,UAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACrB,SAAC,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAf,IAAwB,KAAKH,KAAL,CAAWC,OAAX,CAAmBF,KAAK,CAACG,MAAN,CAAaC,KAAhC,CAAxB;AACF;AACH;;;6BACS;AACR,aACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAE,KAAKC,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAZiBR,S;;IAedS,gB;;;;;AACJ,8BAAe;AAAA;;AAAA;;AACX;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAFW;AAKd;;;;gCACYC,G,EAAK;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;;6BACS;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKG,WAAL,CAAiBP,IAAjB,CAAsB,IAAtB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADF;AAKD;;;;EAhB4BR,S;;IAmBzBgB,a;;;;;;;;;;;;;6BACM;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAPyBhB,S;;AAU5B,eAAegB,aAAf","sourcesContent":["import React, { Component } from 'react';\n\n\n//  做一个百分比换算器，需要你完成三个组件：\n\n//  <Input />：封装了原生的<input />，可以输入任意数字\n\n// <PercentageShower />：实时 显示 <Input /> 中的数字内容，但是需要把它转换成百分比，\n// 例如 <Input /> 输入的是 0.1，那么就要显示 10.00%，保留两位小数。\n\n// <PercentageApp />：组合上述两个组件。\n\nclass Input extends Component {\n  handleNumberInput (event) {\n     if (this.props.onInput) {\n        !!event.target.value && this.props.onInput(event.target.value)\n     }\n  }\n  render () {\n    return (\n      <div className='comment-field-input'>\n        <input type='number' onChange={this.handleNumberInput.bind(this)}/>\n      </div>\n    )\n  }\n}\n\nclass PercentageShower extends Component {\n  constructor () {\n      super()\n      this.state = {\n        percentage: ''\n      }\n  }\n  handleInput (num) {\n    console.log(num)\n  }\n  render () {\n    return (\n      <div>\n         <Input onInput={this.handleInput.bind(this)}/>\n      </div>\n    )\n  }\n}\n\nclass PercentageApp extends Component {\n  render () {\n    return (\n      <div>\n        <PercentageShower />\n      </div>\n    )\n  }\n}\n\nexport default PercentageApp"]},"metadata":{},"sourceType":"module"}
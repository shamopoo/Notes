{"ast":null,"code":"import _classCallCheck from \"/Users/shamopoo/Desktop/github/Notes/reactBook/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shamopoo/Desktop/github/Notes/reactBook/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shamopoo/Desktop/github/Notes/reactBook/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shamopoo/Desktop/github/Notes/reactBook/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shamopoo/Desktop/github/Notes/reactBook/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shamopoo/Desktop/github/Notes/reactBook/src/Comment/CommentInput.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CommentInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentInput, _Component);\n\n  function CommentInput(props) {\n    var _this;\n\n    _classCallCheck(this, CommentInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentInput).call(this, props));\n    _this.state = {\n      username: props.username,\n      content: ''\n    };\n    return _this;\n  }\n\n  _createClass(CommentInput, [{\n    key: \"handleUsernameChange\",\n    value: function handleUsernameChange(e) {\n      this.setState({\n        username: e.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.textarea.focus();\n    }\n  }, {\n    key: \"handleUsernameChange\",\n    value: function handleUsernameChange(event) {\n      this.setState({\n        username: event.target.value\n      });\n    }\n  }, {\n    key: \"handleUsernameBlur\",\n    value: function handleUsernameBlur(event) {\n      if (this.props.onUserNameInputBlur) {\n        this.props.onUserNameInputBlur(event.target.value);\n      }\n    }\n  }, {\n    key: \"handleContentChange\",\n    value: function handleContentChange(e) {\n      this.refs.textarea.style.height = 'auto';\n      this.refs.textarea.style.height = this.refs.textarea.scrollHeight + \"px\";\n      this.setState({\n        content: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      if (this.props.onSubmit) {\n        this.state.username && this.state.content && this.props.onSubmit({\n          username: this.state.username,\n          content: this.state.content,\n          createdTime: +new Date()\n        });\n      }\n\n      this.setState({\n        content: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"comment-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"comment-field-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"\\u7528\\u6237\\u540D\\uFF1A\"), React.createElement(\"div\", {\n        className: \"comment-field-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.username,\n        onChange: this.handleUsernameChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"comment-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"comment-field-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"\\u8BC4\\u8BBA\\u5185\\u5BB9\\uFF1A\"), React.createElement(\"div\", {\n        className: \"comment-field-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        ref: \"textarea\",\n        value: this.state.content,\n        onChange: this.handleContentChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"comment-field-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"\\u53D1\\u5E03\")));\n    }\n  }]);\n\n  return CommentInput;\n}(Component);\n\nCommentInput.propTypes = {\n  username: PropTypes.any,\n  onSubmit: PropTypes.func,\n  onUserNameInputBlur: PropTypes.func\n};\nCommentInput.defaultProps = {\n  username: ''\n};\nexport default CommentInput;","map":{"version":3,"sources":["/Users/shamopoo/Desktop/github/Notes/reactBook/src/Comment/CommentInput.js"],"names":["React","Component","PropTypes","CommentInput","props","state","username","content","e","setState","target","value","textarea","focus","event","onUserNameInputBlur","refs","style","height","scrollHeight","onSubmit","createdTime","Date","handleUsernameChange","bind","handleContentChange","handleSubmit","propTypes","any","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\n\nclass CommentInput extends Component {\n  static propTypes = {\n      username: PropTypes.any,\n      onSubmit: PropTypes.func,\n      onUserNameInputBlur: PropTypes.func\n  }\n  static defaultProps = {\n     username: ''\n  }\n  constructor (props) {\n     super(props)\n     this.state = {\n        username: props.username,\n        content: ''\n     }\n  }\n  handleUsernameChange (e) {\n      this.setState({\n          username: e.target.value\n      })\n  }\n  componentDidMount () {\n    this.textarea.focus()\n  }\n  \n  handleUsernameChange (event) {\n    this.setState({\n      username: event.target.value\n    })\n  }\n\n  handleUsernameBlur (event) {\n    if (this.props.onUserNameInputBlur) {\n      this.props.onUserNameInputBlur(event.target.value)\n    }\n  }\n\n  handleContentChange (e) {\n    this.refs.textarea.style.height = 'auto'\n    this.refs.textarea.style.height =  this.refs.textarea.scrollHeight + \"px\";\n    this.setState({\n        content: e.target.value\n    })\n  }\n  handleSubmit () {\n     if (this.props.onSubmit) {\n        this.state.username && this.state.content && this.props.onSubmit({\n            username: this.state.username,\n            content: this.state.content, \n            createdTime: +new Date()\n        })\n     }\n     this.setState({content: ''})\n  }\n  render () {\n    return (\n      <div className='comment-input'>\n          <div className='comment-field'>\n            <span className='comment-field-name'>用户名：</span>\n            <div className='comment-field-input'>\n              <input \n                  value={this.state.username}\n                  onChange={this.handleUsernameChange.bind(this)} />\n            </div>\n          </div>\n          <div className='comment-field'>\n            <span className='comment-field-name'>评论内容：</span>\n            <div className='comment-field-input'>\n              <textarea \n                  ref=\"textarea\" \n                  value={this.state.content}\n                  onChange={this.handleContentChange.bind(this)} />\n            </div>\n          </div>\n          <div className='comment-field-button'>\n            <button onClick={this.handleSubmit.bind(this)}>\n              发布\n            </button>\n          </div>\n      </div>\n    )\n  }\n}\nexport default CommentInput"]},"metadata":{},"sourceType":"module"}